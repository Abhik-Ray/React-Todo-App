{"version":3,"sources":["Todo.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","todo","toggleTodo","className","checked","complete","onChange","id","label","name","icon","color","size","borderColor","timestamp","TodoList","todos","map","LOCAL_STORAGE_KEY","App","useState","setTodos","todoNameRef","useRef","addTodoToList","e","current","value","prevTodos","uuid","Date","toLocaleString","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","newTodos","find","ref","type","onKeyPress","event","key","placeholder","onClick","filter","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAIe,SAASA,EAAT,GAAqC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WAIjC,OACI,sBAAKC,UAAU,YAAf,UACI,gCACA,cAAC,IAAD,CACAC,QAASH,EAAKI,SACdC,SARR,WACIJ,EAAWD,EAAKM,KAQZC,MAAQP,EAAKQ,KACbC,KAAM,cACE,IADF,CACUC,MAAM,UACdC,KAAM,KAEdC,YAAY,cAGZ,qBAAKV,UAAU,YAAf,SAA4BF,EAAKa,eCnB9B,SAASC,EAAT,GAA0C,IAAtBC,EAAqB,EAArBA,MAAOd,EAAc,EAAdA,WACtC,OACIc,EAAMC,KAAI,SAAAhB,GACN,OAAO,cAACD,EAAD,CAAoBC,KAAMA,EAAMC,WAAYA,GAAjCD,EAAKM,O,oBCA7BW,EAAoB,gBA2DXC,MAzDf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOJ,EAAP,KAAcK,EAAd,KACMC,EAAcC,mBAkBpB,SAASC,EAAcC,GACrB,IAAMhB,EAAOa,EAAYI,QAAQC,MACpB,MAATlB,IACJY,GAAS,SAAAO,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAsB,CAAErB,GAAIsB,MAAQpB,KAAMA,EAAMJ,UAAU,EAAQS,WAAW,IAAIgB,MAAOC,uBAE1FT,EAAYI,QAAQC,MAAQ,IAc9B,OApCAK,qBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQnB,IAChDe,GAAaZ,EAASY,KACzB,IAEHD,qBAAU,WACRI,aAAaE,QAAQpB,EAAmBgB,KAAKK,UAAUvB,MACtD,CAACA,IA8BF,qBAAKb,UAAU,SAAf,SACE,gCACA,+CACA,cAACY,EAAD,CAAUC,MAAOA,EAAOd,WA/B5B,SAAoBK,GAClB,IAAMiC,EAAQ,YAAOxB,GACff,EAAOuC,EAASC,MAAK,SAAAxC,GAAI,OAAIA,EAAKM,KAAOA,KAC/CN,EAAKI,UAAYJ,EAAKI,SACtBgB,EAASmB,MA4BP,sBAAKrC,UAAU,UAAf,UACE,uBAAOA,UAAU,aAAauC,IAAKpB,EAAaqB,KAAK,OAAOC,WAZlE,SAA0BC,GACP,UAAdA,EAAMC,KAAiD,KAA9BxB,EAAYI,QAAQC,OAC9CH,KAU4FuB,YAAY,mCACtG,wBAAQC,QAASxB,EAAjB,sBACA,wBAAQrB,UAAU,cAAc6C,QAnBtC,WACE,IAAMR,EAAWxB,EAAMiC,QAAO,SAAAhD,GAAI,OAAKA,EAAKI,YAC5CgB,EAASmB,IAiBL,8BAEF,uBACA,gCAAMxB,EAAMiC,QAAO,SAAAhD,GAAI,OAAKA,EAAKI,YAAU6C,OAA3C,uBC/CSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c12972d4.chunk.js","sourcesContent":["import React from 'react'\r\nimport Checkbox from \"react-custom-checkbox\";\r\nimport { BiCheck } from 'react-icons/bi';\r\n\r\nexport default function Todo({ todo, toggleTodo }) {\r\n    function handleTodo() {\r\n        toggleTodo(todo.id)\r\n    }\r\n    return (\r\n        <div className=\"todo-item\">\r\n            <label>\r\n            <Checkbox \r\n            checked={todo.complete} \r\n            onChange={handleTodo} \r\n            label= {todo.name} \r\n            icon={<\r\n                    BiCheck color=\"#174A41\" \r\n                    size={50} \r\n                />}\r\n            borderColor=\"#424242\"\r\n            />\r\n            </label>\r\n            <div className=\"timestamp\">{todo.timestamp}</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\nexport default function TodoList({ todos, toggleTodo }) {\r\n    return (\r\n        todos.map(todo => {\r\n            return <Todo key={todo.id} todo={todo} toggleTodo={toggleTodo} />\r\n        })\r\n    )\r\n}\r\n","import './App.css';\nimport TodoList from './TodoList';\nimport { useEffect, useRef, useState } from 'react';\nimport uuid from 'react-uuid'\n\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos'\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    if (storedTodos) setTodos(storedTodos)\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n  }, [todos])\n\n  function toggleTodo(id) {\n    const newTodos = [...todos]\n    const todo = newTodos.find(todo => todo.id === id)\n    todo.complete = !todo.complete\n    setTodos(newTodos)\n  }\n\n  function addTodoToList(e) {\n    const name = todoNameRef.current.value\n    if (name === ' ') return\n    setTodos(prevTodos => {\n      return [...prevTodos, { id: uuid(), name: name, complete: false , timestamp: new Date().toLocaleString()}]\n    })\n    todoNameRef.current.value = ''\n  }\n\n  function handleClearTodos() {\n    const newTodos = todos.filter(todo => !todo.complete)\n    setTodos(newTodos)\n  }\n\n  function handleOnKeyPress(event){\n    if(event.key === 'Enter' && todoNameRef.current.value !== \"\"){\n      addTodoToList()\n    }\n  }\n\n  return (\n    <div className=\"center\">\n      <div>\n      <h1>The TODO List</h1>\n      <TodoList todos={todos} toggleTodo={toggleTodo} />\n      <div className=\"stretch\">\n        <input className=\"left-curve\" ref={todoNameRef} type=\"text\" onKeyPress={handleOnKeyPress} placeholder=\"Type your todo and press Enter\"/>\n        <button onClick={addTodoToList}>Add Todo</button>\n        <button className=\"right-curve\" onClick={handleClearTodos}>Clear checked</button>\n      </div>\n      <br />\n      <div>{todos.filter(todo => !todo.complete).length} left Todo </div>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}